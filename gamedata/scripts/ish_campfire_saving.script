local campfire_saving = true
local campfire_radius = 15
local base_radius = 50

function on_game_start()
    bind_campfire.check_no_nearby_campfire = check_no_nearby_campfire

    RegisterScriptCallback("on_before_save_input", on_before_save_input)
    RegisterScriptCallback("on_option_change", on_option_change)

    on_option_change()
end

function on_before_save_input(flags, typ, text)
    if campfire_saving and level_weathers.valid_levels[level.name()] then
        local error_message = nil

        local nearby_campfire = bind_campfire.get_nearby_campfire(campfire_radius, true)

        if not nearby_campfire then
            error_message = strformat(game.translate_string("st_ui_no_save_campfire_base"), text)
        elseif not nearby_campfire:is_on() then
            error_message = strformat(game.translate_string("st_ui_no_save_campfire_unlit"), text)
        end

        local within_base = is_within_friendly_base()

        if error_message and not within_base then
            actor_menu.set_msg(1, error_message, 4)
            exec_console_cmd("main_menu off")
            flags.ret = true
        end
    end
end

function is_within_friendly_base()
    local friendly_bases = get_friendly_bases()

    for id, smart in pairs(friendly_bases) do
        if smart.dist_to_actor < base_radius and surge_manager.actor_in_cover() then
            return true
        end
    end

    return false
end

function get_friendly_bases()
    local friendly_bases = {}
    local community = gameplay_disguise.get_default_comm()

    for id, smart in pairs(SIMBOARD.smarts_by_names) do
        if smart.is_on_actor_level and smart.props.base > 0 and smart.props.surge > 0 and smart.props[community] > 0 then
            table.insert(friendly_bases, smart)
        end

        if community == "monolith" and smart:name() == "pri_monolith" then
            table.insert(friendly_bases, smart) -- Why? Because for some reason, "Monolith Base" is not a Monolith base.
        end
    end

    return friendly_bases
end

function check_no_nearby_campfire()
    return false -- Prevent vanilla campfire checking function from interfering.
end

function on_option_change()
    if ui_mcm then
        campfire_saving = ui_mcm.get("yasc/enableCampfireSaving")
    end
end
